/*
 * led.c
 *
 *  Created on: Nov 30, 2024
 *      Author: vermi
 */

#ifndef SRC_C_
#define SRC_C_

#include "led.h"

static void turn_on_red(Led* this, Button* button);
static void turn_off_red(Led* this, Button* button);
static void turn_on_green(Led* this, Button* button);
static void turn_off_green(Led* this, Button* button);
static void turn_on_blue(Led* this, Button* button);
static void turn_off_blue(Led* this, Button* button);
static void set_state(Led* this, State* state);

State left_red    = { LEFT,  LEFT_RED_GPIO_Port,    LEFT_RED_Pin    };
State left_green  = { LEFT,  LEFT_GREEN_GPIO_Port,  LEFT_GREEN_Pin  };
State left_blue   = { LEFT,  LEFT_BLUE_GPIO_Port,   LEFT_BLUE_Pin   };

State right_red   = { RIGHT, RIGHT_RED_GPIO_Port,   RIGHT_RED_Pin   };
State right_green = { RIGHT, RIGHT_GREEN_GPIO_Port, RIGHT_GREEN_Pin };
State right_blue  = { RIGHT, RIGHT_BLUE_GPIO_Port,  RIGHT_BLUE_Pin  };

Led red   = { .state = &left_red,   .last_button = false, .operate = turn_off_red,   turn_on_red,   turn_off_red,   set_state };
Led green = { .state = &left_green, .last_button = false, .operate = turn_off_green, turn_on_green, turn_off_green, set_state };
Led blue  = { .state = &left_blue,  .last_button = false, .operate = turn_off_blue,  turn_on_blue,  turn_off_blue,  set_state };

static bool flag;

static void turn_on_red(Led* this, Button* button)
{
	Button* button_4 = GET_INSTANCE(button_4);

	TURN_ON_LED;

	if (this->last_button == false && button->is_pressed(button) == true)
	{
		this->operate = turn_off_red;
	}

	if (this->last_button == false && button_4->is_pressed(button_4) == true)
	{
		if (this->state->direction == LEFT)
		{
			this->set_state(this, &right_red);
		}
		else
		{
			this->set_state(this, &left_red);
		}
	}

	this->last_button = button->is_pressed(button);
	this->last_button = button_4->is_pressed(button_4);
}

static void turn_off_red(Led* this, Button* button)
{
	TURN_OFF_LED;

	if (this->last_button == false && button->is_pressed(button) == true)
	{
		this->operate = turn_on_red;

//		if (button->get_id(button) == BUTTON_4)
//		{
//			if (this->state->direction == LEFT)
//			{
//				this->set_state(this, &right_red);
//			}
//			else
//			{
//				this->set_state(this, &left_red);
//			}
//		}
	}

	this->last_button = button->is_pressed(button);
}

static void turn_on_green(Led* this, Button* button)
{
	TURN_ON_LED;

	if (this->last_button == false && button->is_pressed(button) == true)
	{
		this->operate = turn_off_green;

//		if (button->get_id(button) == BUTTON_4)
//		{
//			if (this->state->direction == LEFT)
//			{
//				this->set_state(this, &right_green);
//			}
//			else
//			{
//				this->set_state(this, &left_green);
//			}
//		}
	}

	this->last_button = button->is_pressed(button);
}

static void turn_off_green(Led* this, Button* button)
{
	TURN_OFF_LED;

	if (this->last_button == false && button->is_pressed(button) == true)
	{
		this->operate = turn_on_green;

//		if (button->get_id(button) == BUTTON_4)
//		{
//			if (this->state->direction == LEFT)
//			{
//				this->set_state(this, &right_green);
//			}
//			else
//			{
//				this->set_state(this, &left_green);
//			}
//		}
	}

	this->last_button = button->is_pressed(button);
}

static void turn_on_blue(Led* this, Button* button)
{
	TURN_ON_LED;

	if (this->last_button == false && button->is_pressed(button) == true)
	{
		this->operate = turn_off_blue;

//		if (button->get_id(button) == BUTTON_4)
//		{
//			if (this->state->direction == LEFT)
//			{
//				this->set_state(this, &right_blue);
//			}
//			else
//			{
//				this->set_state(this, &left_blue);
//			}
//
//		}
	}

	this->last_button = button->is_pressed(button);
}

static void turn_off_blue(Led* this, Button* button)
{
	TURN_OFF_LED;

	if (this->last_button == false && button->is_pressed(button) == true)
	{
		this->operate = turn_on_blue;

//		if (button->get_id(button) == BUTTON_4)
//		{
//			if (this->state->direction == LEFT)
//			{
//				this->set_state(this, &right_blue);
//			}
//			else
//			{
//				this->set_state(this, &left_blue);
//			}
//		}
	}

	this->last_button = button->is_pressed(button);
}


static void set_state(Led* this, State* state)
{
	 this->state = state;
}


Led* get_red(void)
{
	return &red;
}

Led* get_green(void)
{
	return &green;
}

Led* get_blue(void)
{
	return &blue;
}




#endif /* SRC_C_ */
